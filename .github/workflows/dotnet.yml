# Name of the workflow
name: .NET API CI

# Triggers the workflow on push or pull request events targeting the 'main' branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Define the jobs to be run
jobs:
  build:
    # Specify the type of runner to use
    runs-on: ubuntu-latest

    steps:
    # Check out the repository code
    - name: Checkout code
      uses: actions/checkout@v3

    # Setup .NET Core SDK version
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'  # Replace with the .NET SDK version you need

    # Restore dependencies
    - name: Restore dependencies
      run: dotnet restore src/IP_S3_2024_NvS/IP_S3_NvS_ToyShopAPI/IP_S3_NvS_ToyShopAPI.sln

    # Build the application
    - name: Build the application
      run: dotnet build src/IP_S3_2024_NvS/IP_S3_NvS_ToyShopAPI/IP_S3_NvS_ToyShopAPI.sln --configuration Release --no-restore

    # Run unit tests
    - name: Run unit tests
      run: dotnet test src/IP_S3_2024_NvS/IP_S3_NvS_ToyShopAPI/IP_S3_NvS_ToyShopAPI.sln --configuration Release --no-build --verbosity normal

    # Publish the application
    - name: Publish the application
      run: dotnet publish src/IP_S3_NvS_ToyShopAPI/IP_S3_NvS_ToyShopAPI/IP_S3_NvS_ToyShopAPI.csproj --configuration Release --no-build --output ./publish

    # Uncomment and configure the following steps if you want to deploy your application
    # - name: Deploy to Azure Web App
    #   uses: azure/webapps-deploy@v2
    #   with:
    #     app-name: <YOUR_WEB_APP_NAME>  # Replace with your Azure Web App name
    #     slot-name: <YOUR_SLOT_NAME>  # Optional: replace with your slot name (defaults to 'production')
    #     publish-profile: ${{ secrets.AzureAppService_PublishProfile }}  # Make sure to set this secret in your GitHub repository

